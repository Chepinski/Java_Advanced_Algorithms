Questions:
What is the Barabasi model and why is it important?
Research DAG (Directed acyclic graphs (for DFS))


Notes:
BFS is important in web crawling.

DFS takes same time whether recursive or iterative.  Java will use stack for both.

DFS = stack (mehr memory friendly)
BFS = queue

toString method can always be overridden

DAG directed acyclic graph..a graph with no directed cycles
topological sort has linear time complexity

Hamiltonian path?

topological order
	find edge with no incoming edges
	then find next edge with no incoming edges
		(edges already counted do not count as an incoming edge)
	repeat until done
	
	gives us the steps in order we have to take to complete a task.
	no task can be completed until the previous steps (incoming edges) are completed
		-dependency management (Maven)
		-syllabus für Uni
		
Cycle = we are visiting again a vertex that is being visited

O(N) items (leaf nodes) in queue, if graph has N - BFS (good for artificial intelligence/robot movements
	because it searches through the entire local area.
O(logN) items, so more memory friendly and preferred - DFS

Shortest Path algorithms
finding a shortest path between two vertices in a graph
	-Dijkstra
		Edsger Dijkstra 1956
		positive edge weights only
		asymptotically fastest single-source shortest-path algorithm
		if source changes, needs recalculation
		O(V*log(V)+E) V=verteces E=edges
		greedy algorithm/tries to find min distance between all verteces
		
		Adjacency matrixes help Dijkstra
	-Bellman Ford
		Bellman and Ford (independently) 1958
		slower but can handle negative edge weights as well
		V-1 iterations running O(V*E)
		V-1 +1 to detect cycles
		no negative cycles IRL but sometimes problems (forex, stock market)
			are given negative edges
		